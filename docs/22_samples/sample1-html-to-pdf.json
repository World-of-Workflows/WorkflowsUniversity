{"$id":"1","definitionId":"b3996be1bdc846e7aaf9ef19af435543","versionId":"5aebd5325b784089a917fa20cc8c4d02","name":"SAMPLE1_HTML_to_PDF","displayName":"SAMPLE1 HTML to PDF page /sample1","description":"Add line items and estimated start date to finish creating quote","version":27,"variables":{"$id":"2","data":{}},"customAttributes":{"$id":"3","data":{}},"isSingleton":false,"persistenceBehavior":"WorkflowBurst","deleteCompletedInstances":false,"isPublished":true,"isLatest":true,"createdAt":"2024-09-28T10:58:55.084181Z","activities":[{"$id":"4","activityId":"1a0ae2f6-37cf-4717-94df-95065280fbd0","type":"HttpEndpoint","name":"httpSample1","displayName":"GET /sample1","x":1300,"y":160,"persistWorkflow":false,"loadWorkflowContext":false,"saveWorkflowContext":false,"properties":[{"$id":"5","name":"Path","expressions":{"$id":"6","Literal":"/sample1"}},{"$id":"7","name":"Methods","expressions":{"$id":"8","Json":"[\"GET\"]"}},{"$id":"9","name":"ReadContent","expressions":{"$id":"10","Literal":"true"}},{"$id":"11","name":"TargetType","expressions":{"$id":"12"}},{"$id":"13","name":"Schema","syntax":"Literal","expressions":{"$id":"14","Literal":""}},{"$id":"15","name":"Authorize","expressions":{"$id":"16"}},{"$id":"17","name":"Policy","expressions":{"$id":"18"}},{"$id":"19","name":"AuthorizeWithCustomHeader","expressions":{"$id":"20"}},{"$id":"21","name":"CustomHeaderName","expressions":{"$id":"22"}},{"$id":"23","name":"CustomHeaderValue","expressions":{"$id":"24"}}],"propertyStorageProviders":{"$id":"25"}},{"$id":"26","activityId":"76c05f7b-f8b9-4920-9c2f-f8b4a15228f3","type":"Correlate","displayName":"Correlate","x":2240,"y":500,"persistWorkflow":false,"loadWorkflowContext":false,"saveWorkflowContext":false,"properties":[{"$id":"27","name":"Value","syntax":"Liquid","expressions":{"$id":"28","Liquid":"showing a page"}}],"propertyStorageProviders":{"$id":"29"}},{"$id":"30","activityId":"ad00735b-1c0d-4722-ab3f-d488559f5831","type":"Correlate","displayName":"Correlate","x":1720,"y":160,"persistWorkflow":false,"loadWorkflowContext":false,"saveWorkflowContext":false,"properties":[{"$id":"31","name":"Value","syntax":"Liquid","expressions":{"$id":"32","Liquid":"getting ready to show a page"}}],"propertyStorageProviders":{"$id":"33"}},{"$id":"34","activityId":"86757581-0af9-414d-9ae2-3e13950ec36e","type":"WriteHttpResponse","displayName":"HTTP Response - show all Settings - with PDF button","x":2180,"y":660,"persistWorkflow":false,"loadWorkflowContext":false,"saveWorkflowContext":false,"properties":[{"$id":"35","name":"Content","syntax":"Liquid","expressions":{"$id":"36","Liquid":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>SAMPLE1 - dislays all settings</title>\r\n    {{Variables.StandardHeaderMatter | raw }}\r\n    <style>{{Variables.Style | raw}}</style>\r\n   \r\n</head>\r\n<body class=\"pt-10\">\r\n    <div class=\"mt-8 mx-auto bg-white p-4 rounded-lg shadow-lg max-w-full\">\r\n        <h1 class=\"text-center text-2xl font-bold mb-6\">Settings</h1>\r\n    \r\n        <!-- settings Table -->\r\n        <div style=\"page-break-after: auto\"></div>\r\n        <div class=\"mb-4\">\r\n            {% assign rowCounter = 0 %}  <!-- Initialize a counter -->\r\n            {% assign pageCounter = 0 %}  <!-- Initialize a counter -->\r\n\r\n            {% for setting in Activities.ListSettings.Output %}\r\n    \r\n                {% assign rowCounter = rowCounter | plus: 1 %} <!-- Increment the counter -->\r\n                \r\n                <!-- Apply style if the row counter is 15, 50, 75, etc. -->\r\n                {% if rowCounter == 1 or rowCounter == 15 or rowCounter == 50 or rowCounter == 75 or rowCounter == 100 %}\r\n                </table>\r\n                {% assign pageCounter = pageCounter | plus: 1 %} <!-- Increment the counter -->\r\n                \r\n                <h2 class=\"text-xl font-bold text-gray-800 mt-20 mb-4\">Settings    Page:{{pageCounter}}</h2>\r\n    \r\n                <div> <!-- Removed overflow-x-auto to ensure the table always fits the page width -->\r\n                    <table class=\"mt-10 bg-white table-auto w-full max-w-full break-words\" style=\"page-break-after: always;\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"text-xs py-2 text-left border-b-2\">#</th>\r\n                                <th class=\"text-xs py-2 text-left border-b-2\">Key</th>\r\n                                <th class=\"text-xs py-2 text-left border-b-2\">Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"items-table-body\">\r\n                {% endif %}\r\n\r\n                <tr>\r\n                    <td class=\"text-xs border px-2 py-2 text-left\">{{ forloop.index }}</td>\r\n                    <td class=\"text-xs border px-2 py-2 text-left\">{{setting.Title}}</td>\r\n                    <td class=\"text-xs border px-2 py-2 line-clamp-3 w-max-full break-all break-words text-left\">{{setting.Value}}</td>\r\n                </tr>\r\n                \r\n            {% endfor %}\r\n                </tbody>\r\n            </table>\r\n        </div> <!-- End of table wrapper -->\r\n        <input type=\"hidden\" id=\"PDFFileName\" name=\"PDFFileName\" value=\"SAMPLE_{{rowCounter}}\">\r\n        \r\n        <!--  Buttons -->\r\n        <div id=\"allbuttons\" class=\"mb-10 flex items-center justify-between\">\r\n            \r\n            {{Variables.PoweredBy | raw}}\r\n            <button \r\n                onclick=\"window.history.back()\" \r\n                class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\r\n                Go Back\r\n            </button>\r\n            {{Variables.PDFButton | raw }}\r\n        </div>\r\n    </div>\r\n    {{Variables.PDFButtonJS | raw }}\r\n\r\n</body>\r\n</html>"}},{"$id":"37","name":"ContentType","expressions":{"$id":"38","Literal":"text/html"}},{"$id":"39","name":"StatusCode","expressions":{"$id":"40","Literal":"OK"}},{"$id":"41","name":"CharSet","expressions":{"$id":"42","Literal":"utf-8"}},{"$id":"43","name":"ResponseHeaders","expressions":{"$id":"44"}}],"propertyStorageProviders":{"$id":"45"}},{"$id":"46","activityId":"65ec2f7d-6ccd-4c3e-8585-f0240e715137","type":"ObjectInstanceList","name":"ListSettings","displayName":"List Settings","x":1700,"y":360,"persistWorkflow":false,"loadWorkflowContext":false,"saveWorkflowContext":false,"properties":[{"$id":"47","name":"ObjectType","syntax":"Literal","expressions":{"$id":"48","Literal":"Settings"}},{"$id":"49","name":"Filter","expressions":{"$id":"50"}},{"$id":"51","name":"Skip","expressions":{"$id":"52"}},{"$id":"53","name":"Limit","expressions":{"$id":"54"}},{"$id":"55","name":"OrderBy","expressions":{"$id":"56"}},{"$id":"57","name":"Expand","expressions":{"$id":"58","Literal":"true"}}],"propertyStorageProviders":{"$id":"59"}},{"$id":"60","activityId":"15b32405-dc6d-492b-b85a-f069c46d8e9a","type":"RunJavaScript","displayName":"set up variables from settings","x":2100,"y":360,"persistWorkflow":false,"loadWorkflowContext":false,"saveWorkflowContext":false,"properties":[{"$id":"61","name":"Script","syntax":"Literal","expressions":{"$id":"62","Literal":"// Define an array of key-value pairs\r\nconst keyVariableMappings = [\r\n    { variableName: \"PoweredBy\", key: \"PoweredByWoW\" },\r\n    { variableName: \"StandardHeaderMatter\", key: \"StandardHeaderMatter\" },\r\n    { variableName: \"Style\", key: \"Style\" },\r\n    { variableName: \"PDFButton\", key: \"PDFButton\" },\r\n    { variableName: \"PDFButtonJS\", key: \"PDFButtonJS\" },\r\n    \r\n];\r\n\r\n// Function to get value by title from the JSON data\r\nfunction getValueByTitle(jsonData, key) {\r\n    for (let item of jsonData) {\r\n        if (item.Title === key) {\r\n            return item.Value;\r\n        }\r\n    }\r\n    return null; // Handle \"key not found\" as needed\r\n}\r\n\r\n// Loop through the array to set variables dynamically\r\nconst jsonData = activities.ListSettings.Output();\r\nkeyVariableMappings.forEach(mapping => {\r\n    setVariable(mapping.variableName, getValueByTitle(jsonData, mapping.key));\r\n});\r\n"}},{"$id":"63","name":"PossibleOutcomes","expressions":{"$id":"64"}}],"propertyStorageProviders":{"$id":"65"}}],"connections":[{"$id":"66","sourceActivityId":"65ec2f7d-6ccd-4c3e-8585-f0240e715137","targetActivityId":"15b32405-dc6d-492b-b85a-f069c46d8e9a","outcome":"Done"},{"$id":"67","sourceActivityId":"1a0ae2f6-37cf-4717-94df-95065280fbd0","targetActivityId":"ad00735b-1c0d-4722-ab3f-d488559f5831","outcome":"Done"},{"$id":"68","sourceActivityId":"15b32405-dc6d-492b-b85a-f069c46d8e9a","targetActivityId":"76c05f7b-f8b9-4920-9c2f-f8b4a15228f3","outcome":"Done"},{"$id":"69","sourceActivityId":"76c05f7b-f8b9-4920-9c2f-f8b4a15228f3","targetActivityId":"86757581-0af9-414d-9ae2-3e13950ec36e","outcome":"Done"},{"$id":"70","sourceActivityId":"ad00735b-1c0d-4722-ab3f-d488559f5831","targetActivityId":"65ec2f7d-6ccd-4c3e-8585-f0240e715137","outcome":"Done"}],"id":"5aebd5325b784089a917fa20cc8c4d02"}